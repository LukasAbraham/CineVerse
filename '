using CineVerse.Core.Services;
using CineVerse.Data.Entities;
using CineVerse.Forms;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CineVerse.Views.UserControls
{
    public partial class HomeScreen : UserControlComponent
    {
        private MainForm _mainForm;
        private User _user;

        public HomeScreen()
        {
            InitializeComponent();
        }

        public void SetMainForm(MainForm mainForm)
        {
            _mainForm = mainForm;
        }

        public void SetUser(User user)
        {
            _user = user;
            lblWelcomeMessage.Text = $"Welcome back, {_user.Username}. Let's see what your friends have been watching...";
        }

        public async Task LoadContents()
        {
            await LoadTopRatedMovies();
            await LoadMovieRecommendations();
        }

        private async Task LoadTopRatedMovies()
        {
            foreach (var card in pnMovies.Controls.OfType<MovieCard>().ToList())
            {
                pnMovies.Controls.Remove(card);
            }

            List<Movie> movies = await MovieService.Instance.GetMoviesAsync(1, 10, sortBy: "rating", sortValue: "highest first");

            var mainForm = this.FindForm() as MainForm;
            foreach (Movie movie in movies)
            {
                MovieCard card = new()
                {
                    Dock = DockStyle.Left,
                };
                await card.Initialize(mainForm, movie, _mediator);

                pnMovies.Controls.Add(card);
                card.BringToFront();
            }
        }

        private async Task LoadMovieRecommendations()
        {
            foreach (var card in pnRecommendations.Controls.OfType<MovieCard>().ToList())
            {
                pnRecommendations.Controls.Remove(card);
            }

            List<Movie> movies = await MovieService.Instance.GetMoviesAsync(1, 100);

            Random random = new Random();
            List<Movie> randomMovies = movies.OrderBy(m => random.Next()).Take(10).ToList();

            var mainForm = this.FindForm() as MainForm;
            foreach (Movie movie in randomMovies)
            {
                MovieCard card = new()
                {
                    Dock = DockStyle.Left,
                };
                await card.Initialize(mainForm, movie, _mediator);

                pnRecommendations.Controls.Add(card);
                card.BringToFront();
            }
        }
    }
}
